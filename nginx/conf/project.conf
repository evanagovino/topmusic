server {
    listen 80;
    listen [::]:80;

    server_name topmusic.lol www.topmusic.lol;
    server_tokens off;

    # Privacy policy - must come before other locations
    location = /privacy-policy.html {
        alias /var/www/html//privacy-policy.html;
        add_header Content-Type text/html;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # Apple Music authorization page - served by FastAPI
    location = /apple_music_auth.html {
        proxy_pass http://fastapi:8000/web/get_apple_music_auth_page/;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Test endpoint to verify nginx routing
    location = /test-nginx {
        return 200 "Nginx routing is working! Privacy policy should be at /privacy-policy.html";
        add_header Content-Type text/plain;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {    
        proxy_pass http://streamlit:8501/;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location ^~ /api/v1/ {
        proxy_pass http://fastapi:8000/;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location ^~ /web/ {
        proxy_pass http://fastapi:8000/web/;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }


}


server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name topmusic.lol;

    ssl_certificate /etc/nginx/ssl/live/topmusic.lol/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/topmusic.lol/privkey.pem;
    
    # Privacy policy - must come before other locations
    location = /privacy-policy.html {
        alias /usr/share/nginx/html/privacy-policy.html;
        add_header Content-Type text/html;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # Test endpoint to verify nginx routing
    location = /test-nginx {
        return 200 "Nginx routing is working! Privacy policy should be at /privacy-policy.html";
        add_header Content-Type text/plain;
    }
    
    location / {    
        proxy_pass http://frontend:8501/;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location ^~ /api/v1/ {
        proxy_pass http://fastapi:8000/;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}